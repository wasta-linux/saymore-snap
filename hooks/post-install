#!/bin/env bash

# Kill SayMore b/c it starts as part of install in addition to run,
#   which doesn't allow pre-start script to run. The launch script 
#   will start it again, at the correct time.
pkill SayMore.exe

# Set Winver to 10.
"$WINELOADER" winecfg /v win10

# Change DPI (set in setup and/or pre-install hook).
hex_dpi=$(printf '0x%.8X\n' "$WINEDPI")
"$WINELOADER" reg add "HKLM\\System\\CurrentControlSet\\Hardware Profiles\\Current\\Software\\Fonts" \
  /v "LogPixels" /t "REG_DWORD" /d "$hex_dpi" /f
"$WINELOADER" reg add "HKCU\\Control Panel\\Desktop" \
  /v "LogPixels" /t "REG_DWORD" /d "$hex_dpi" /f

# Enable "Assembly binding logging".
"$WINELOADER" reg add "HKLM\\Software\\Microsoft\\Fusion" /v "EnableLog" /t "REG_DWORD" /d "0x00000001" /f

# Make SayMore use native text editor.
"$WINELOADER" reg add "HKCR\\txtfile\\shell\\open\\command" \
  /v "@" /t "REG_SZ" /d '"C:\windows\system32\winebrowser.exe" "%1"' /f

# Add user folders to file browser Favorites.
user_dirs=(
    DESKTOP
    DOWNLOAD
    DOCUMENTS
    MUSIC
    PICTURES
    VIDEOS
)
wine_faves="${WINEPREFIX}/drive_c/users/${USER}/Favorites"
for d in "${user_dirs[@]}"; do
    dpath="$(xdg-user-dir "$d")"
    dname="$(basename "$dpath")"
    if [[ -d "$dpath" && ! -L "${wine_faves}/${dname}" ]]; then
      ln -s "$dpath" "${wine_faves}/${dname}"
    fi
done

# Create initial Saymore.settings to allow overriding it's default values.
mkdir -p "${WINEPREFIX}/drive_c/users/${USER}/AppData/Local/SayMore"
sm_settings="${WINEPREFIX}/drive_c/users/${USER}/AppData/Local/SayMore/SayMore.settings"

if [[ ! -f "$sm_settings" ]]; then
  echo -e "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<Settings>
  <ProjectWindow />
  <UserInterfaceLanguage>en</UserInterfaceLanguage>
  <WelcomeDialog />
  <MRUList type=\"System.Collections.Specialized.StringCollection\" />
</Settings>" > "$sm_settings"
fi

# Set language to system language.
lang=${LANG%%_*}
if [[ "$(xmlstarlet select -t -v "//Settings/UserInterfaceLanguage" "$sm_settings")" != "$lang" ]]; then
    xmlstarlet edit -L -P -S -u "//Settings/UserInterfaceLanguage" -v "$lang" "$sm_settings"
fi 

# Create initial "test" project to workaround fatal new-session and new-person errors.
proj_name="test"
test_proj_dir="${WINEPREFIX}/drive_c/users/${USER}/Documents/SayMore/${proj_name}"
mkdir -p "$test_proj_dir"
if [[ ! -f "${test_proj_dir}/${proj_name}.sprj" ]]; then
    echo '<?xml version="1.0" encoding="utf-8"?>
<Project />' > "${test_proj_dir}/${proj_name}.sprj"
fi
# Create test person.
mkdir -p "${test_proj_dir}/People/New Person"
person_file="${test_proj_dir}/People/New Person/New Person.person"
if [[ ! -f "$person_file" ]]; then
    echo '<?xml version="1.0" encoding="utf-8"?>
<Person />' > "$person_file"
fi
# Create test session.
mkdir -p "${test_proj_dir}/Sessions/New Session"
session_file="${test_proj_dir}/Sessions/New Session/New Session.session"
if [[ ! -f "$session_file" ]]; then
    echo '<?xml version="1.0" encoding="utf-8"?>
<Session version="2.0" />' > "$session_file"
fi

# Force SayMore to open "test" project on 1st run.
test_proj_path="C:\\users\\${USER}\\Documents\\SayMore\\test\\test.sprj"
if [[ -z "$(xmlstarlet select -t -v "//Settings/MRUList/MRUList0" "$sm_settings")" ]]; then
  xmlstarlet edit -L -P -S -s "//Settings/MRUList" -t elem -n "MRUList0" -v "$test_proj_path" "$sm_settings"
fi
# Set WelcomeDialog values.
if [[ -z "$(xmlstarlet select -t -v "//Settings/WelcomeDialog/windowSettings/state" "$sm_settings")" ]]; then
  xmlstarlet edit -L -P -S \
    -s "//Settings/WelcomeDialog" -t attr -n "type" -v "SIL.Windows.Forms.PortableSettingsProvider.FormSettings" \
    -s "//Settings/WelcomeDialog" -t elem -n "windowSettings" \
    -s "//Settings/WelcomeDialog/windowSettings" -t elem -n "state" -v "Normal" \
    -s "//Settings/WelcomeDialog/windowSettings" -t elem -n "bounds" -v "489, 162, 621, 528" \
    -s "//Settings/WelcomeDialog/windowSettings" -t elem -n "dpi" -v "$WINEDPI" \
    "$sm_settings"
fi
# Set ProjectWindow values.
if [[ -z "$(xmlstarlet select -t -v "//Settings/ProjectWindow/windowSettings/state" "$sm_settings")" ]]; then
  xmlstarlet edit -L -P -S \
    -s "//Settings/ProjectWindow" -t attr -n "type" -v "SIL.Windows.Forms.PortableSettingsProvider.FormSettings" \
    -s "//Settings/ProjectWindow" -t elem -n "windowSettings" \
    -s "//Settings/ProjectWindow/windowSettings" -t elem -n "state" -v "Maximized" \
    -s "//Settings/ProjectWindow/windowSettings" -t elem -n "bounds" -v "50, 50, 1200, 900" \
    -s "//Settings/ProjectWindow/windowSettings" -t elem -n "dpi" -v "$WINEDPI" \
    "$sm_settings"
fi

# Copy in langtags.json with correct permissions.
sldrcache_dir="${WINEPREFIX}/drive_c/ProgramData/SIL/SldrCache"
mkdir -p "$sldrcache_dir"
base="$SNAP"
if [[ -n "$APP_SHARE_DIR" ]]; then
  base="$APP_SHARE_DIR"
fi
cp -f "${base}/data/langtags.json" "$sldrcache_dir"
chmod 664 "${sldrcache_dir}/langtags.json"
